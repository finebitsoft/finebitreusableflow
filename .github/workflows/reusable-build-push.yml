name: Build and Push

permissions:
  contents: read
  packages: write
  attestations: write
  id-token: write
on:
  workflow_call:
    inputs:
      backend-path:
        required: true
        type: string
      frontend-path:
        required: true
        type: string
      image_name:
        required: true
        type: string
      context:
        required: false
        type: string
        default: .
    secrets:
      docker_hub_username:
        required: true
      docker_hub_password:
        required: true
jobs:
  build-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Build and Package
        run: ./mvnw clean package -B -DskipTests
        working-directory: ${{ inputs.backend-path }}

      - name: Dockerhub Login
        if: contains(fromJSON('["refs/heads/main", "refs/heads/develop"]'), github.ref) || startsWith(github.ref, 'refs/heads/hotfix/')
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.docker_hub_username }}
          password: ${{ secrets.docker_hub_password }}

      - name: Extract metadata (tags, labels) for Docker
        if: contains(fromJSON('["refs/heads/main", "refs/heads/develop"]'), github.ref) || startsWith(github.ref, 'refs/heads/hotfix/')
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ vars.REGISTRY }}/${{ inputs.image_name }}

      - name: Build and Push Docker Image
        if: contains(fromJSON('["refs/heads/main", "refs/heads/develop"]'), github.ref) || startsWith(github.ref, 'refs/heads/hotfix/')
        uses: docker/build-push-action@v4
        with:
          context: ${{ inputs.context }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  build-frontend:
    runs-on: ubuntu-latest
    name: Build Ionic Frontend
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'v20.19.2'

      - name: Install Dependencies
        run: npm install
        working-directory: ${{ inputs.frontend-path }}