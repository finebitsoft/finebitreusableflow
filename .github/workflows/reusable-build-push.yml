name: "Reusable Build and Push"

on:
  workflow_call:
    inputs:
      image_name:
        required: true
        type: string
      context:
        required: false
        type: string
        default: .
      backend_path:
        required: false
        type: string
      frontend_path:
        required: false
        type: string
    secrets:
      docker_hub_username:
        required: true
      docker_hub_password:
        required: true
      jwt_private_key:
        required: true
      jwt_public_key:
        required: true

jobs:
  build-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Build and Package
        run: ./mvnw clean package -B -DskipTests
        env:
          JWT_PRIVATE_KEY: ${{ secrets.jwt_private_key }}
          JWT_PUBLIC_KEY: ${{ secrets.jwt_public_key }}

      - name: Dockerhub Login
        if: startsWith(github.ref, 'refs/heads/main') || startsWith(github.ref, 'refs/heads/develop') || startsWith(github.ref, 'refs/heads/hotfix/')
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.docker_hub_username }}
          password: ${{ secrets.docker_hub_password }}

      - name: Extract metadata for Docker
        if: startsWith(github.ref, 'refs/heads/main') || startsWith(github.ref, 'refs/heads/develop') || startsWith(github.ref, 'refs/heads/hotfix/')
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ vars.REGISTRY }}/${{ inputs.image_name }}

      - name: Build and Push Docker Image
        if: startsWith(github.ref, 'refs/heads/main') || startsWith(github.ref, 'refs/heads/develop') || startsWith(github.ref, 'refs/heads/hotfix/')
        uses: docker/build-push-action@v4
        with:
          context: ${{ inputs.context }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}